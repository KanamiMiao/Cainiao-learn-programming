https://blog.csdn.net/qq_41954556/article/details/129764143?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EYuanLiJiHua%7EPosition-2-129764143-blog-126360835.235%5Ev36%5Epc_relevant_anti_vip&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EYuanLiJiHua%7EPosition-2-129764143-blog-126360835.235%5Ev36%5Epc_relevant_anti_vip&utm_relevant_index=5
搭配以上网址方便理解

Capture：

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
	if(htim->Instance==TIM2)
	{
		if(htim->Channel==HAL_TIM_ACTIVE_CHANNEL_2)
		{
			if(CaptureNum==0)
			{
				GetValue1=TIM2->CCR2;
				CaptureNum=1;
			}
			else if(CaptureNum==1)
			{
				GetValue2=TIM2->CCR2;
				CaptureNum=0;
				
				if(GetValue2>GetValue1)
					GetValue=GetValue2-GetValue1;
				else
					GetValue=0xFF+GetValue2-GetValue1;
				PA1=1000*1000/GetValue;
			}
		}
	}
}



PWM捕捉频率，占空比：
u8 CaptureNumber;
u16 IC3ReadValue1,IC3ReadValue2,Capture_High,Capture_Low,TIM3Freq;
float TIM3Duty,zhan_kon_bi ;

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
	if(htim -> Instance == TIM3)
	{
		if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2)
		{
			if(CaptureNumber == 0)
			{
				/* Get the Input Capture value */
				IC3ReadValue1 = TIM3->CCR2;
				CaptureNumber = 1;
				__HAL_TIM_SET_CAPTUREPOLARITY(htim,TIM_CHANNEL_2,TIM_INPUTCHANNELPOLARITY_FALLING);
			}
			else if(CaptureNumber == 1)
			{
				/* Get the Input Capture value */
				IC3ReadValue2 = TIM3->CCR2;
				CaptureNumber = 2;
				__HAL_TIM_SET_CAPTUREPOLARITY(htim,TIM_CHANNEL_2,TIM_INPUTCHANNELPOLARITY_RISING);
				if (IC3ReadValue2 > IC3ReadValue1)
				{
					Capture_High = (IC3ReadValue2 - IC3ReadValue1); 
				}
				else
				{
					Capture_High = ((0xFFFF - IC3ReadValue1) + IC3ReadValue2); 
				}
				IC3ReadValue1 = IC3ReadValue2;
			}
			else if(CaptureNumber == 2)
			{
				/* Get the Input Capture value */
				IC3ReadValue2 = TIM3->CCR2;
				CaptureNumber = 0;
				if (IC3ReadValue2 > IC3ReadValue1)
				{
					Capture_Low = (IC3ReadValue2 - IC3ReadValue1); 
				}
				else
				{
					Capture_Low = ((0xFFFF - IC3ReadValue1) + IC3ReadValue2); 
				}
				/* Frequency computation */ 
				TIM3Freq = (uint32_t) 1000000 / (Capture_Low + Capture_High);
				TIM3Duty = Capture_High * 1.0 / (Capture_Low + Capture_High);
				zhan_kon_bi = TIM3Duty;
			}
		}
	}
}
